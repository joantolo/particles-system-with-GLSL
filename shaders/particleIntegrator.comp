#version 430
#define SIZE_X 256
#define SIZE_Y 1


layout( std140, binding = 0 ) buffer Pos {
   vec4 Positions[ ];
};

layout( std140, binding = 1 ) buffer Vel {
   vec4 Velocities[ ];
};

layout( std140, binding = 2 ) buffer Col {
   vec4 Colors[ ];
};

layout (local_size_x = SIZE_X, local_size_y = SIZE_Y) in;

vec4 g = vec4(0.0, -9.8, 0.0, 0.0);
const float dt = 0.001;

//Indice de la particula a integr
uint gid = gl_GlobalInvocationID.x;

void main()
{

	vec4 p = Positions[gid];
	vec4 vel = Velocities[gid];
	vec4 col = Colors[gid];

	//col = col - dt * 100;

	vec4 pos = p + vel * dt;
	vel += g * dt;

	if(pos.y < -1.0)
	{
		vel = reflect(vel, vec4(0.0, 1.0, 0.0, 0.0)) * 0.9;
		pos = p + vel * dt;
	}

	Positions[gl_GlobalInvocationID.x] = pos;
	Velocities[gl_GlobalInvocationID.x] = vel;
	Colors[gl_GlobalInvocationID.x] = col;
}